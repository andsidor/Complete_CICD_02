name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up NodeJS 
      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      # Install NodeJS dependencies
      - name: Install NodeJS dependencies
        run: npm install

  sonarqube:
    name: SonarQube_DOCKER_TRIVY
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


      - name: Build Docker
        run: |
              docker build -t github-action-cicd:${{ github.sha}} .
              docker build -t actions-app:${{ github.sha}} .
              docker tag actions-app:${{ github.sha}} ${{ secrets.ECR_REPOSITORY_URI}}/github-action-cicd:latest 
              docker tag actions-app:${{ github.sha}} ${{ secrets.DOCKERHUB_USERNAME }}/github-action-cicd:latest

      # Trivy Scan
      - name: Trivy Scan
        run: docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image github-action-cicd:${{ github.sha}}


    # Set up AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}


     # Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

      # Push image to Amazon ECR
      - name: Push image to Amazon ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URI}}/actions-cicd:latest
        env:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
  

    # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Push image to DockerHub
      - name: Push image to DockerHub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/github-action-cicd:latest









